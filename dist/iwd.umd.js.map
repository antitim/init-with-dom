{"version":3,"file":"iwd.umd.js","sources":["../src/utils/nodeEach.js","../src/utils/camelCase.js","../src/NodesHandlers.js","../src/utils/getAttr.js","../src/utils/dispatchEvent.js","../src/utils/getObserver.js","../src/index.js","../src/Iwd.js"],"sourcesContent":["export default (nodes, callback) => {\n  for (let i = 0; i < nodes.length; i++) {\n    callback(nodes[i], i);\n  }\n};\n","export default name => (\r\n  name.replace(\r\n    /-([a-z])/g,\r\n    g => (g[1].toUpperCase())\r\n  )\r\n);\r\n","import nodeEach from './utils/nodeEach';\nimport getAttr from './utils/getAttr';\n\nclass NodesHandlers {\n  constructor () {\n    this.nodes = {};\n    this.handlers = {};\n    this.middleware = [];\n  }\n\n  /**\n   * Executes a handler named name for all registered 'Node'\n   *\n   * @param {String} name Name of the handler\n   */\n  executeHandler = name => {\n    const handler = this.handlers[name];\n    const nodes = this.nodes[name];\n\n    if (nodes && handler) {\n      nodeEach(nodes, node => this.init(node, handler));\n    }\n  }\n\n  /**\n   * Executes the handler for node\n   *\n   * @param {Element} node Node Element\n   * @param {Function} handler Handler\n   */\n  init = (node, handler) => {\n    if (node.classList.contains('js_inited')) return;\n\n    let params = getAttr(node);\n\n    for (let middleware of this.middleware) {\n      params = middleware(node, params);\n    }\n\n    handler.call(node, params);\n\n    node.classList.add('js_inited');\n  }\n\n  addNode = node => {\n    // check the availability of the method\n    if (!node.getAttribute) return;\n\n    const name = node.getAttribute('data-js');\n\n    if (!name) return;\n\n    node.classList.add('js');\n\n    if (!this.nodes[name]) {\n      this.nodes[name] = [];\n    }\n\n    this.nodes[name].push(node);\n\n    this.executeHandler(name);\n  }\n\n  removedUnusedNode = () => {\n    const names = Object.keys(this.nodes);\n\n    for (let i = 0; i < names.length; i++) {\n      const name = names[i];\n\n      this.nodes[name] = this.nodes[name].filter(node => node.isConnected);\n    }\n  }\n\n  addHandler = (name, handler) => {\n    this.handlers[name] = handler;\n    this.executeHandler(name);\n  }\n\n  replaceHandler = (name, handler) => {\n    this.handlers[name] = handler;\n  }\n\n  removeHandler = name => {\n    this.handlers[name] = null;\n  }\n\n  removeAllHandlers = () => {\n    this.handlers = {};\n  }\n}\n\nexport default NodesHandlers;\n","import camelCase from './camelCase';\r\n\r\nexport default element => {\r\n  const attr = {\r\n    data: {}\r\n  };\r\n\r\n  for (let i = 0; i < element.attributes.length; i++) {\r\n    let key = element.attributes[i].name;\r\n    let value = element.attributes[i].textContent;\r\n\r\n    if (key.slice(0, 4) === 'data') {\r\n      key = key.slice(5);\r\n      key = camelCase(key);\r\n      attr.data[key] = value;\r\n    } else {\r\n      key = camelCase(key);\r\n      attr[key] = value;\r\n    }\r\n  }\r\n\r\n  return attr;\r\n};\r\n","export default (target, eventName, detail) => {\r\n  let event;\r\n\r\n  try {\r\n    event = new CustomEvent(eventName, {\r\n      detail\r\n    });\r\n  } catch (e) {\r\n    event = document.createEvent('CustomEvent');\r\n    event.initCustomEvent(eventName, false, false, detail);\r\n  }\r\n\r\n  target.dispatchEvent(event);\r\n};\r\n","export default () => (\n  window.MutationObserver ||\n  window.WebKitMutationObserver ||\n  window.MozMutationObserver\n);\n","import Iwd from './Iwd';\r\n\r\nconst iwd = new Iwd();\r\n\r\nexport default {\r\n  add: iwd.addHandler,\r\n  replace: iwd.replaceHandler,\r\n  remove: iwd.removeHandler,\r\n  removeAll: iwd.removeAllHandlers,\r\n  middleware: iwd.middleware,\r\n};\r\n","import NodesHandlers from './NodesHandlers';\nimport dispatchEvent from './utils/dispatchEvent';\nimport nodeEach from './utils/nodeEach';\nimport getObserver from './utils/getObserver';\n\nclass Iwd extends NodesHandlers {\n  constructor (args) {\n    super(args);\n\n    nodeEach(document.querySelectorAll('[data-js]'), this.addNode);\n\n    this.Observer = getObserver();\n    this.attachEvent();\n  }\n\n  attachEvent () {\n    if (this.Observer) {\n      const observer = new this.Observer(this.mutationCallback);\n      observer.observe(document.body, {\n        childList: true,\n        attributes: true,\n        subtree: true\n      });\n    } else {\n      /**\n       * For IE 10\n       */\n      document.addEventListener(\n        'DOMNodeInserted',\n        e => {\n          if (e.target.constructor !== NodeList) {\n            this.addNode(e.target);\n          } else {\n            nodeEach(e.target, this.addNode);\n          }\n        },\n        false\n      );\n\n      document.addEventListener(\n        'DOMAttrModified',\n        e => {\n          dispatchEvent(\n            e.target,\n            'iwdUpdate',\n            {\n              attribute: e.attrName\n            }\n          );\n        },\n        false\n      );\n    }\n  }\n\n  mutationCallback = mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        const nodes = mutation.addedNodes;\n\n        nodeEach(nodes, node => {\n          this.addNode(node);\n  \n          if (node.querySelectorAll) {\n            nodeEach(\n              node.querySelectorAll('[data-js]'),\n              this.addNode,\n            );\n          }\n        });\n      }\n  \n      if (mutation.type === 'attributes') {\n        dispatchEvent(\n          mutation.target,\n          'iwdUpdate',\n          {\n            attribute: mutation.attributeName\n          }\n        );\n      }\n    });\n  }\n}\n\nexport default Iwd;\n"],"names":["nodes","callback","i","length","name","replace","g","toUpperCase","NodesHandlers","handler","_this","handlers","nodeEach","node","init","classList","contains","params","element","attr","data","attributes","key","value","textContent","slice","camelCase","getAttr","middleware","call","add","getAttribute","push","executeHandler","names","Object","keys","filter","isConnected","target","eventName","detail","event","CustomEvent","e","document","createEvent","initCustomEvent","dispatchEvent","window","MutationObserver","WebKitMutationObserver","MozMutationObserver","iwd","args","mutations","forEach","mutation","type","addedNodes","addNode","querySelectorAll","attribute","attributeName","Observer","getObserver","attachEvent","this","mutationCallback","observe","body","childList","subtree","addEventListener","constructor","NodeList","_this2","attrName","addHandler","replaceHandler","remove","removeHandler","removeAll","removeAllHandlers"],"mappings":"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"}